{"version":3,"sources":["api/users.ts","services/user.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","TodoForm","onAdd","todos","useState","title","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","Math","max","map","todo","action","method","onSubmit","event","preventDefault","trim","completed","className","type","placeholder","value","onChange","target","disabled","UserInfo","href","TodoInfo","cn","TodoList","initialTodos","App","setTodos","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f1bdee8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n  todos: Todo[];\n};\n\nexport const TodoForm: React.FC<Props> = ({\n  onAdd = () => {},\n  todos,\n}) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const id = Math.max(...todos.map(todo => todo.id)) + 1;\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    onAdd({\n      id,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label className=\"label\">\n          <span className=\"label__title\">Title:</span>\n          <input\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            id=\"todo-title\"\n            className=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n        </label>\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">\n          <span className=\"label__title\">User:</span>\n          <select\n            name=\"user\"\n            id=\"user-id\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <li\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed === true,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          data-id={todo.id}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { getUserById } from './services/user';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const onAddTodo = (todo: Todo) => {\n    setTodos(prevTodos => [\n      ...prevTodos,\n      todo,\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onAdd={onAddTodo} todos={todos} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}